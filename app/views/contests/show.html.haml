= set_title :title => contest.name
= set_description sanitize(contest.description, :tags => []).truncate(100)
.contests
  .contest
    %h1.title
      = contest.name
    .content.redactor
      %article= raw contest.description
    .actions
      - if can?(:manage, contest)
        = link_to 'изменить', [:edit, contest]
        = link_to 'удалить', contest, :confirm => 'Вы уверены?', :method => :delete
    %div{ :class => ['dates', (contest.active? ? 'active' : nil)] * ' ' }
      %time.start_at= russian_date(contest.start_at)
      %label &mdash;
      %time.end_at= russian_date(contest.end_at)
    = render 'like_buttons/all'
    - if contest.active?
      .statistics
        Участвует #{contest.approved_poops(can?(:reject, Poop)).count} #{t :poops, :count => contest.approved_poops(can?(:reject, Poop)).count}
    - elsif contest.start_at > Date.today
      .statistics
        Конкурс еще не начался
    - else
      .statistics
        Конкурс завершен
      - if contest.has_winners?
        .winners
          %h2 Победители:
          .list
            - if contest.first_place
              %h3 Первое место: #{link_to contest.first_winner.user, profile_path(contest.first_winner.user)}
              .poop
                .video= video contest.first_winner.code
            - if contest.second_place
              %h3 Второе место: #{link_to contest.second_winner.user, profile_path(contest.second_winner.user)}
              .poop
                .video= video contest.second_winner.code
            - if contest.third_place
              %h3 Третье место: #{link_to contest.third_winner.user, profile_path(contest.third_winner.user)}
              .poop
                .video= video contest.third_winner.code
        .clear
    .poops
      = render poops
    = paginate poops

= content_for :comments do
  #vk_comments
    :javascript
      VK.Widgets.Comments("vk_comments", {limit: 10, width: "496", pageUrl: "http://rytp.ru#{contest_path(contest)}"});

= content_for :ad_block_1 do
  = render '/ad/before_comments'
